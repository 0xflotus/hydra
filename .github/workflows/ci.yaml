name: CI

on:
  workflow_dispatch:
  push:

env:
  POSTGRES_REPO: ghcr.io/hydrasdb/hydra
  SPILO_REPO: 011789831835.dkr.ecr.us-east-1.amazonaws.com/spilo
  TEST_CONTAINER_LOG_DIR: /tmp/containerlogs

jobs:
  lint_go:
    name: Run Go linters
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3


  build_validate_postgres:
    strategy:
      matrix:
        postgres: ['13', '14']
    name: Build and Validate Postgres ${{ matrix.postgres }}
    runs-on: ubuntu-latest
    steps:
    - name: setup POSTGRES_IMAGE env
      run: echo "POSTGRES_IMAGE=${{ format('{0}:{1}-{2}', env.POSTGRES_REPO, matrix.postgres, github.sha) }}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        platforms: linux/amd64,linux/arm64/v8
        driver-opts: network=host
    - name: Bake and load amd64 Postgres image
      uses: docker/bake-action@v2.3.0
      env:
        POSTGRES_BASE_VERSION: ${{ matrix.postgres }}
      with:
        load: true
        pull: true
        targets: postgres
        set: |
          *.platform=linux/amd64
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
          postgres.tags=${{ env.POSTGRES_IMAGE }}
    - uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: Run Acceptance Tests
      env:
        POSTGRES_UPGRADE_FROM_IMAGE: ${{ env.POSTGRES_IMAGE }}
        POSTGRES_BASE_VERSION: ${{ matrix.postgres }}
      run: make postgres_acceptance_test
    - name: Upload test container logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: postgres_${{ matrix.postgres }}_container_logs
        path: ${{ env.TEST_CONTAINER_LOG_DIR }}
        retention-days: 7
    - name: Bake multi-platform Postgres
      if: github.ref == 'refs/heads/main'
      uses: docker/bake-action@v2.3.0
      with:
        pull: true
        targets: postgres
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  build_validate_spilo:
    name: Build and Validate Spilo
    runs-on: ubuntu-latest
    steps:
    - name: setup SPILO_IMAGE
      run: echo "SPILO_IMAGE=${{ format('{0}:{1}', env.SPILO_REPO, github.sha) }}" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        platforms: linux/amd64,linux/arm64/v8
        driver-opts: network=host
    - name: Bake and load amd64 spilo image
      uses: docker/bake-action@v2.3.0
      with:
        load: true
        pull: true
        targets: spilo
        set: |
          *.platform=linux/amd64
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
          spilo.tags=${{ env.SPILO_IMAGE }}
    - uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: Run Acceptance Tests for Postgres 13
      env:
        SPILO_POSTGRES_VERSION: '13'
      run: make spilo_acceptance_test
    - name: Run Acceptance Tests for Postgres 14
      env:
        SPILO_UPGRADE_FROM_IMAGE: ${{ env.SPILO_IMAGE }}
        SPILO_POSTGRES_VERSION: '14'
      run: make spilo_acceptance_test
    - name: Upload test container logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: spilo_container_logs
        path: ${{ env.TEST_CONTAINER_LOG_DIR }}
        retention-days: 7
    - name: Bake multi-platform spilo
      if: github.ref == 'refs/heads/main'
      uses: docker/bake-action@v2.3.0
      with:
        pull: true
        targets: spilo
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  push_postgres:
    needs: [build_validate_postgres, build_validate_spilo]
    if: github.repository == 'hydrasdb/hydra' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        postgres: ['13', '14']
    name: Push Postgres ${{ matrix.postgres }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        platforms: linux/amd64,linux/arm64/v8
        driver-opts: network=host
    - name: Login to ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Bake and push Postgres
      uses: docker/bake-action@v2.3.0
      with:
        push: true
        targets: postgres
        set: |
          *.cache-from=type=gha
          postgres.tags=${{ env.POSTGRES_REPO }}:${{ matrix.postgres }}
          postgres.tags=${{ env.POSTGRES_REPO }}:${{ matrix.postgres }}-${{ github.sha }}
          ${{ matrix.postgres == '14' && format('postgres.tags={0}:latest', env.POSTGRES_REPO) || '' }}

  push_spilo:
    needs: [build_validate_postgres, build_validate_spilo]
    if: github.repository == 'hydrasdb/hydra' && github.ref == 'refs/heads/main'
    name: Push Spilo
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        platforms: linux/amd64,linux/arm64/v8
        driver-opts: network=host
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1
        mask-aws-account-id: no
    - name: Login to Amazon ECR
      id: spilo-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: "011789831835"
    - name: Bake and push spilo
      uses: docker/bake-action@v2.3.0
      with:
        push: true
        targets: spilo
        set: |
          *.cache-from=type=gha
          spilo.tags=${{ env.SPILO_REPO }}:${{ github.sha }}
