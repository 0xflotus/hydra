name: CI

on:
  workflow_dispatch:
  push:

jobs:
  build_validate_postgres:
    strategy:
      matrix:
        postgres: ['13', '14']
    name: Build and Validate Postgres ${{ matrix.postgres }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        platforms: linux/amd64,linux/arm64/v8
        driver-opts: network=host
    - name: Bake and load amd64 Postgres ${{ matrix.postgres }} image
      uses: docker/bake-action@v2.3.0
      env:
        POSTGRES_BASE_VERSION: ${{ matrix.postgres }}
      with:
        load: true
        pull: true
        targets: postgres
        set: |
          *.platform=linux/amd64
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
          postgres.tags=ghcr.io/hydrasdb/hydra:${{ matrix.postgres }}-${{ github.sha }}
    - uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: Run Acceptance Tests
      env:
        POSTGRES_IMAGE: ghcr.io/hydrasdb/hydra:${{ matrix.postgres }}-${{ github.sha }}
        POSTGRES_UPGRADE_FROM_IMAGE: ghcr.io/hydrasdb/hydra:${{ matrix.postgres }}-${{ github.sha }}
        POSTGRES_BASE_VERSION: ${{ matrix.postgres }}
        TEST_CONTAINER_LOG_DIR: /tmp/containerlogs
      run: make postgres_acceptance_test
    - name: Upload test container logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: postgres_${{ matrix.postgres }}_container_logs
        path: /tmp/containerlogs
        retention-days: 7
    - name: Bake multi-platform Postgres
      uses: docker/bake-action@v2.3.0
      with:
        pull: true
        targets: postgres
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  build_validate_spilo:
    name: Build and Validate Spilo
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        platforms: linux/amd64,linux/arm64/v8
        driver-opts: network=host
    - name: Bake and load amd64 spilo image
      uses: docker/bake-action@v2.3.0
      with:
        load: true
        pull: true
        targets: spilo
        set: |
          *.platform=linux/amd64
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
          spilo.tags=ghcr.io/hydrasdb/spilo:${{ github.sha }}
    - uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: Run Acceptance Tests for Postgres 13
      env:
        SPILO_IMAGE: ghcr.io/hydrasdb/spilo:-${{ github.sha }}
        SPILO_POSTGRES_VERSION: '13'
        TEST_CONTAINER_LOG_DIR: /tmp/containerlogs
      run: make spilo_acceptance_test
    - name: Run Acceptance Tests for Postgres 14
      env:
        SPILO_IMAGE: ghcr.io/hydrasdb/spilo:-${{ github.sha }}
        SPILO_UPGRADE_FROM_IMAGE: ghcr.io/hydrasdb/spilo:-${{ github.sha }}
        SPILO_POSTGRES_VERSION: '14'
        TEST_CONTAINER_LOG_DIR: /tmp/containerlogs
      run: make spilo_acceptance_test
    - name: Upload test container logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: spilo_container_logs
        path: /tmp/containerlogs
        retention-days: 7
    - name: Bake multi-platform spilo
      uses: docker/bake-action@v2.3.0
      with:
        pull: true
        targets: spilo
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

      # # Docker push to ghcr.io
      # - name: Login to ghcr.io
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/login-action@v2.0.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Docker push hydra to ghcr.io
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/bake-action@master
      #   with:
      #     workdir: ./hydra
      #     targets: hydra
      #     push: true
      #     set: |
      #       hydra.tags=ghcr.io/hydrasdb/hydra:latest
      #       hydra.tags=ghcr.io/hydrasdb/hydra:${{ env.TAG }}
      #       *.cache-from=type=gha
      #       *.cache-to=type=gha,mode=max
      #
      # # Docker push to ecr
      # - name: Configure AWS credentials
      #   if: github.ref == 'refs/heads/main'
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      #     aws-region: us-east-1
      #     mask-aws-account-id: no
      #
      # - name: Login to Amazon ECR
      #   if: github.ref == 'refs/heads/main'
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     registries: "011789831835"
      #
      # - name: Docker push hydra to ECR
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/bake-action@master
      #   with:
      #     workdir: ./hydra
      #     targets: hydra
      #     push: true
      #     # TODO: create ECR repo to HOST/hydra and change the refs here
      #     set: |
      #       hydra.tags=${{ steps.login-ecr.outputs.registry }}/spilo:latest
      #       hydra.tags=${{ steps.login-ecr.outputs.registry }}/spilo:${{ env.TAG }}
      #       *.cache-from=type=gha
      #       *.cache-to=type=gha,mode=max
