name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - '*'

jobs:
  docker_build_and_push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      # Note: the following folder layout matters:
      # parent_dir:
      #   - hydra
      #   - Hydras
      #   - citus
      #   - spilo-build
      - name: Checkout hydra
        uses: actions/checkout@v2
        with:
          path: hydra
      - name: Checkout Hydras
        uses: actions/checkout@v2
        with:
          repository: HydrasCo/Hydras
          token: ${{ secrets.GH_TOKEN }}
          path: Hydras
      - name: Checkout citus
        uses: actions/checkout@v2
        with:
          repository: HydrasCo/citus
          token: ${{ secrets.GH_TOKEN }}
          path: citus
      - name: Checkout spilo-build
        uses: actions/checkout@v2
        with:
          repository: HydrasCo/spilo-build
          token: ${{ secrets.GH_TOKEN }}
          path: spilo-build
      - name: Set versions
        run: |
          cd ./Hydras && HYDRAS_SHA=$(git rev-parse --short HEAD) && echo "HYDRAS_SHA=${HYDRAS_SHA}" >> $GITHUB_ENV && cd ../
          cd ./citus && COLUMNAR_SHA=$(git rev-parse --short HEAD) && echo "COLUMNAR_SHA=${COLUMNAR_SHA}" >> $GITHUB_ENV && cd ../
          cd ./spilo-build && SPILO_SHA=$(git rev-parse --short HEAD) && echo "SPILO_SHA=${SPILO_SHA}" >> $GITHUB_ENV && cd ../
          echo "TAG=${SPILO_SHA}_${COLUMNAR_SHA}_${HYDRAS_SHA}" >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: no
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: "011789831835"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Docker Build Hydra
        uses: docker/build-push-action@v3
        with:
          context: ./Hydras
          push: true
          tags: localhost:5000/hydra/hydra:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Docker Build Columnar
        uses: docker/build-push-action@v3
        with:
          context: ./citus
          push: true
          tags: localhost:5000/hydra/columnar:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Docker Build Spilo
        uses: docker/build-push-action@v3
        with:
          context: ./spilo-build
          file: Dockerfile.cloud
          push: true
          tags: |
            localhost:5000/${{ steps.login-ecr.outputs.registry }}/spilo:${{ env.TAG }}
          build-args: |
            HYDRA_EXT_REPO=localhost:5000/hydra/hydra:${{ env.TAG }}
            COLUMNAR_EXT_REPO=localhost:5000/hydra/columnar:${{ env.TAG }}
            TIMESCALEDB=
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: Run acceptance tests
        run: |
          cd ./hydra
          SPILO_IMAGE=localhost:5000/${{ steps.login-ecr.outputs.registry }}/spilo:${TAG} make acceptance_test
      - name: Docker Push Hydra
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          context: ./hydra
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/spilo:${{ env.TAG }}
            ${{ steps.login-ecr.outputs.registry }}/spilo:latest
          build-args: |
            HYDRA_EXT_REPO=localhost:5000/hydra/hydra:${{ env.TAG }}
            COLUMNAR_EXT_REPO=localhost:5000/hydra/columnar:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
