name: CI

on:
  workflow_dispatch:
  push:

jobs:
  docker_build_and_push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout hydra
        uses: actions/checkout@v3

      # Docker build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Docker build
        uses: docker/bake-action@v2.3.0
        env:
          POSTGRES_REPO: localhost:5000/hydra
          SPILO_REPO: localhost:5000/spilo
          TAG: ${{ github.sha }}
        with:
          pull: true
          push: true
          set: |
            *.platform=linux/amd64
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      # Acceptance tests
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.19
      - name: Run Acceptance Tests
        env:
          HYDRA_IMAGE: localhost:5000/spilo:${{ github.sha }}
        run: |
          HYDRA_PROD_IMAGE=ghcr.io/hydrasdb/hydra:$(cat HYDRA_PROD_VER) \
            make acceptance_test

      # # Docker push to ghcr.io
      # - name: Login to ghcr.io
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/login-action@v2.0.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Docker push hydra to ghcr.io
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/bake-action@master
      #   with:
      #     workdir: ./hydra
      #     targets: hydra
      #     push: true
      #     set: |
      #       hydra.tags=ghcr.io/hydrasdb/hydra:latest
      #       hydra.tags=ghcr.io/hydrasdb/hydra:${{ env.TAG }}
      #       *.cache-from=type=gha
      #       *.cache-to=type=gha,mode=max
      #
      # # Docker push to ecr
      # - name: Configure AWS credentials
      #   if: github.ref == 'refs/heads/main'
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      #     aws-region: us-east-1
      #     mask-aws-account-id: no
      #
      # - name: Login to Amazon ECR
      #   if: github.ref == 'refs/heads/main'
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     registries: "011789831835"
      #
      # - name: Docker push hydra to ECR
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/bake-action@master
      #   with:
      #     workdir: ./hydra
      #     targets: hydra
      #     push: true
      #     # TODO: create ECR repo to HOST/hydra and change the refs here
      #     set: |
      #       hydra.tags=${{ steps.login-ecr.outputs.registry }}/spilo:latest
      #       hydra.tags=${{ steps.login-ecr.outputs.registry }}/spilo:${{ env.TAG }}
      #       *.cache-from=type=gha
      #       *.cache-to=type=gha,mode=max
